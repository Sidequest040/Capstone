version: '3.8'  # Use a more recent version

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"  # React app port
    depends_on:
      - backend  # Ensure backend starts first
    environment:
      - REACT_APP_BACKEND_URL=${BACKEND_URL}  # Use environment variables for better flexibility
      - REACT_APP_API_URL=${API_URL}          # Use environment variables for API
      - REACT_APP_DB_URL=${DB_URL}            # Use environment variables for MySQL
    volumes:
      - ./frontend:/usr/src/app  # Mount frontend folder for live reload
      - /usr/src/app/node_modules  # Avoid overwriting node_modules
      - /usr/src/app/node_modules/.cache  # Ensure the .cache directory can be used
    command: ["npm", "start"]  # React dev server with hot-reloading
    restart: unless-stopped  # Ensure service restarts on failure

  backend:
    build: ./backend
    ports:
      - "3001:3001"  # Backend service port
    depends_on:
      db:
        condition: service_healthy  # Wait for MySQL service to be healthy
    environment:
      - DATABASE_HOST=db  # Refer to MySQL service as 'db'
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=${DB_NAME}
      - BACKEND_URL=${BACKEND_URL}   # Backend URL from .env
      - DB_URL=${DB_URL}             # DB URL from .env
    volumes:
      - ./backend:/usr/src/app  # Mount backend folder for live reload
      - /usr/src/app/node_modules  # Avoid overwriting node_modules
    command: ["npm", "run", "dev"]  # Use nodemon or equivalent for backend dev server
    restart: unless-stopped  # Restart the backend if it crashes

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}  # Initialize with your database
    ports:
      - "3306:3306"  # MySQL default port
    volumes:
      - db_data:/var/lib/mysql  # Persist database data
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped  # Restart MySQL if it crashes

volumes:
  db_data:
